import numpy as np

arr = np.array([[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12]])
arr *= 2
print("Dimension of array:", np.ndim(arr))
print("Shape of array:", np.shape(arr))


# Iterate through the array's elements and print them out
for row in arr:
    for elem in row:
        print(elem, end=" ")
    print()

# Iterate through the flattened array and print out each element
for elem in arr.flat:
    print(elem, end=" ")

import numpy as np
import matplotlib.pyplot as plt

# Create x and y integer arrays
x = np.array([1, 2, 3, 4, 5, 6])
y = np.array([5, 6, 7, 8, 9, 10])

# Plot a line using x as the X-axis and y as the Y-axis, with a red dashed line and circle markers
plt.plot(x, y, 'r--o')

# Add axis labels, a title, and a legend
plt.xlabel('X-axis')
plt.ylabel('Y-axis')
plt.title('Line Plot')
plt.legend(['Line'], loc='best')

# Show the plot
plt.show()

import matplotlib.pyplot as plt

# Define the x and y coordinates of the points
x = [3, 6, 9, 12]
y = [2, 8, 1, 10]

# Plot a line connecting the points, with markers at each point
plt.plot(x, y, '-o')

# Add labels to the markers
for i in range(len(x)):
    plt.text(x[i], y[i], f'({x[i]},{y[i]})')

# Add axis labels and a title
plt.xlabel('X-axis')
plt.ylabel('Y-axis')
plt.title('Line Plot')

# Show the plot
plt.show()

import matplotlib.pyplot as plt

# Define the x and y coordinates of the points
x = [0, 1, 2, 3, 4, 5]
y = [2, 4, 6, 14, 10, 12]

# Plot a dashed red line connecting the points, with green circle markers of size 10 at each point
plt.plot(x, y, '--', color='red', marker='o', markersize=10, markerfacecolor='green')

# Add axis labels and a title
plt.xlabel('X-axis')
plt.ylabel('Y-axis')
plt.title('Line Plot')

# Show the plot
plt.show()

import matplotlib.pyplot as plt

# Define the x coordinates for the lines
x = [0, 1, 2, 3, 4, 5]

# Define the y coordinates for the lines
y1 = [2, 4, 6, 8, 10, 12]
y2 = [1, 3, 5, 7, 9, 11]
y3 = [3, 6, 9, 12, 15, 18]

# Plot the lines with different colors and markers
plt.plot(x, y1, '-o', color='red', label='Line 1')
plt.plot(x, y2, '-s', color='blue', label='Line 2')
plt.plot(x, y3, '-^', color='green', label='Line 3')

# Add axis labels and a title
plt.xlabel('X-axis')
plt.ylabel('Y-axis')
plt.title('Multiple Lines')

# Add a legend
plt.legend()

# Show the plot
plt.show()
import matplotlib.pyplot as plt

# Define the student grades dictionary
marks = {'Andy': 88, 'Amy': 66, 'James': 90, 'Jules': 55, 'Arthur': 77}

# Create a bar chart of the student grades
plt.bar(marks.keys(), marks.values())

# Add labels and title to the bar chart
plt.xlabel('Students')
plt.ylabel('Grades')
plt.title('Student Grades')

# Show the bar chart
plt.show()

# Create a pie chart of the student grades
plt.pie(marks.values(), labels=marks.keys())

# Add a title and legend to the pie chart
plt.title('Student Grades')
plt.legend()

# Show the pie chart
plt.show()

import matplotlib.pyplot as plt
import numpy as np

# Create the data for the plots
x = np.linspace(0, 2*np.pi, 100)
y1 = np.sin(x)
y2 = np.cos(x)
y3 = np.exp(x)
y4 = np.random.normal(0, 1, 100)
y5 = np.random.normal(5, 1, 100)

# Create the subplot with 2 rows and 3 columns
fig, axs = plt.subplots(nrows=2, ncols=3, figsize=(12, 8))

# Add a multiple lines subplot
axs[0, 0].plot(x, y1, label='sin(x)')
axs[0, 0].plot(x, y2, label='cos(x)')
axs[0, 0].legend()
axs[0, 0].set_title('Multiple Lines')

# Add a bar chart subplot
names = ['A', 'B', 'C', 'D', 'E']
values = [1, 3, 2, 4, 5]
axs[0, 1].bar(names, values)
axs[0, 1].set_title('Bar Chart')

# Add a pie chart subplot
labels = ['A', 'B', 'C', 'D', 'E']
sizes = [15, 30, 20, 10, 25]
axs[0, 2].pie(sizes, labels=labels)
axs[0, 2].set_title('Pie Chart')

# Add a subplot with a grid
axs[1, 0].plot(x, y3)
axs[1, 0].grid(True)
axs[1, 0].set_title('Grid')

# Add a scatter plot subplot
axs[1, 1].scatter(x, y4)
axs[1, 1].set_title('Scatter Plot')

# Add a histogram subplot
axs[1, 2].hist(y5, bins=10)
axs[1, 2].set_title('Histogram')

# Adjust the spacing between the subplots
fig.tight_layout()

# Show the plot
plt.show()
